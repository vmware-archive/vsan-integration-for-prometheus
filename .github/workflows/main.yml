name: vSAN Prometheus CICD Workflow
on:
  push:
    branches: [ main-skip ]

jobs:
  job_updated_files:
    name: get checkin updated files
    runs-on: ubuntu-latest
    outputs:
      update_files: ${{ steps.files.outputs.all }}
    steps:
      - uses: actions/checkout@v2
      - name: Run Find changed files.
        id: files
        uses: jitterbit/get-changed-files@v1

  vsan-prometheus-setup-cicd:
    name: vsan-prometheus-setup CICD
    runs-on: ubuntu-latest
    needs: [job_updated_files]
    if: contains(needs.job_updated_files.outputs.update_files, 'vsan-prometheus-setup')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Install dependencies
        id: prep
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/requirements.txt
          SHORT_SHAR=$(git rev-parse --short HEAD)
          TAGS="github-${SHORT_SHAR}"
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
      - name: Run unittest test_token_setup
        env:
          PYTHONPATH: "${PYTHONPATH}:/vsan-prometheus-setup"
        run: python tests/test_token_setup.py
      - name: Set up QEMU
        if: ${{ success() }}
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        if: ${{ success() }}
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        if: ${{ success() }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: vsan-prometheus-setup image build and push
        if: ${{ success() }}
        id: vsan-prometheus-setup-build
        uses: docker/build-push-action@v2
        with:
          context: ./vsan-prometheus-setup
          file: ./vsan-prometheus-setup/Dockerfile
          push: true
          tags: vmware/vsan-prometheus-setup:${{ steps.prep.outputs.tags }}
      - name: vsan-prometheus-setup image digest
        if: ${{ success() }}
        run: echo ${{ steps.vsan-prometheus-setup-build.outputs.digest }}

  vsan-prometheus-servicediscovery-cicd:
    name: vsan-prometheus-servicediscovery CICD
    runs-on: ubuntu-latest
    needs: [job_updated_files]
    if: contains(needs.job_updated_files.outputs.update_files, 'vsan-prometheus-servicediscovery')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Install dependencies
        id: prep
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/requirements.txt
          SHORT_SHAR=$(git rev-parse --short HEAD)
          TAGS="github-${SHORT_SHAR}"
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
      - name: Run unittest test_vsan_servicediscovery
        env:
          PYTHONPATH: "${PYTHONPATH}:/vsan-prometheus-servicediscovery"
        run: python tests/test_vsan_servicediscovery.py
      - name: Set up QEMU
        if: ${{ success() }}
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        if: ${{ success() }}
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        if: ${{ success() }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: vsan-prometheus-servicediscovery image build and push
        if: ${{ success() }}
        id: vsan-prometheus-servicediscovery-build
        uses: docker/build-push-action@v2
        with:
          context: ./vsan-prometheus-servicediscovery
          file: ./vsan-prometheus-servicediscovery/Dockerfile
          push: true
          tags: vmware/vsan-prometheus-servicediscovery:${{ steps.prep.outputs.tags }}
      - name: vsan-prometheus-servicediscovery image digest
        if: ${{ success() }}
        run: echo ${{ steps.vsan-prometheus-servicediscovery-build.outputs.digest }}

  vsan-prometheus-operator-cicd:
    name: vsan-prometheus-operator CICD
    runs-on: ubuntu-latest
    needs: [job_updated_files]
    if: contains(needs.job_updated_files.outputs.update_files, 'vsan-prometheus-operator')
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        id: prep
        run: |
          SHORT_SHAR=$(git rev-parse --short HEAD)
          TAGS="github-${SHORT_SHAR}"
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
      - name: Set up QEMU
        if: ${{ success() }}
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        if: ${{ success() }}
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        if: ${{ success() }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: vsan-prometheus-operator image build and push
        if: ${{ success() }}
        id: vsan-prometheus-operator-build
        uses: docker/build-push-action@v2
        with:
          context: ./vsan-prometheus-operator
          file: ./vsan-prometheus-operator/Dockerfile
          push: true
          tags: vmware/vsan-prometheus-operator:${{ steps.prep.outputs.tags }}
      - name: vsan-prometheus-operator image digest
        if: ${{ success() }}
        run: echo ${{ steps.vsan-prometheus-operator-build.outputs.digest }}

  vsan-prometheus-exporter:
    name: vsan-prometheus-exporter CICD
    runs-on: ubuntu-latest
    needs: [job_updated_files]
    if: contains(needs.job_updated_files.outputs.update_files, 'vsan-prometheus-exporter')
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        id: prep
        run: |
          SHORT_SHAR=$(git rev-parse --short HEAD)
          TAGS="github-${SHORT_SHAR}"
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
      - name: Set up QEMU
        if: ${{ success() }}
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        if: ${{ success() }}
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        if: ${{ success() }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: vsan-prometheus-exporter image build and push
        if: ${{ success() }}
        id: vsan-prometheus-exporter-build
        uses: docker/build-push-action@v2
        with:
          context: ./vsan-prometheus-exporter
          file: ./vsan-prometheus-exporter/Dockerfile
          push: true
          tags: vmware/vsan-prometheus-exporter:${{ steps.prep.outputs.tags }}
      - name: vsan-prometheus-exporter image digest
        if: ${{ success() }}
        run: echo ${{ steps.vsan-prometheus-exporter-build.outputs.digest }}
